Parameters:
  PipelineName:
    Type: String
    Default: Pipeline

Resources:
  ArtifactStore:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      AccessControl: Private

  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      Path: "/"
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: [
                "codepipeline.amazonaws.com",
                "cloudformation.amazonaws.com"
              ]
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: "root"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action: "*"
                Resource: "*"

  Webhook: 
    Type: 'AWS::CodePipeline::Webhook' 
    Properties:
      AuthenticationConfiguration: 
        SecretToken: !Join 
          - ":"
          - - "{{resolve:secretsmanager"
            - !ImportValue GitHubOAuthSecretName
            - "SecretString:token}}"
      Filters: 
      - JsonPath: "$.ref" 
        MatchEquals: refs/heads/{Branch} 
      Authentication: GITHUB_HMAC
      TargetPipeline: !Ref Pipeline
      TargetAction: Source
      TargetPipelineVersion: !GetAtt Pipeline.Version
      RegisterWithThirdParty: true

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref ArtifactStore
        Type: S3
      Name: !Ref PipelineName
      RestartExecutionOnUpdate: True
      RoleArn: !GetAtt PipelineRole.Arn
      Stages:
        - Name: "Source"
          Actions:
            - InputArtifacts: []
              Name: "Source"
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              OutputArtifacts:
                - Name: SourceOutput
              Configuration:
                Owner: JoshArmi 
                OAuthToken: !Join
                  - ":"
                  - - "{{resolve:secretsmanager"
                    - !ImportValue GitHubOAuthSecretName
                    - "SecretString:token}}"
                PollForSourceChanges: false
                Repo: sam-pipeline
                Branch: main
        - Name: "AdministerPipeline"
          Actions:
            - Name: "AdministerPipeline"
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                ActionMode: REPLACE_ON_FAILURE
                Capabilities: CAPABILITY_NAMED_IAM
                RoleArn: !GetAtt PipelineRole.Arn
                StackName: !Ref PipelineName
                TemplatePath: "SourceOutput::pipeline.yaml"
              InputArtifacts:
                - Name: "SourceOutput"
              RunOrder: 1
